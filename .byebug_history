continue
reload!
continue
        h[e] += 1
q1question.answers.map(&:response).each_with_object(Hash.new(0)) { |e, h|
q1
        h[e] += 1
q1..answers.map(&:response).each_with_object(Hash.new(0)) do |e, h|
q1 = Survey.first.questions[1]
q2 = _
Survey.first.questions[1]
Survey.first.questions[0]
Survey.first.questions
questions.map do |question| { question: question, summary: question_summary(question) } end
questions.map do |question| { question: question, summary: question_summary(question) end
    end
      }
        summary: question_summary(question)
        question: question,
      {
questions.map do |question|
continue
reload!
Survey.first.summary
reload!
Survey.first.summary
question.answers.map(&:response)
question
        h[e] += 1
question.answers.map(&:response).each_with_object(Hash.new(0)) do |e, h|
question.answers.map(&:response).each_with_object(Hash.new(0)) do |e, h| h[e] += 1
question
continue
reload!
questions.group_by(&:question_type).each_with_object({}) do |hash, (key,value)| p hash[key[0]] end
questions.group_by(&:question_type).each_with_object({}) do |hash, (key,value)| p hash[0] end
questions.group_by(&:question_type).each_with_object({}) do |hash, (key,value)| p hash end
questions.group_by(&:question_type).each_with_object({}) do |hash, (key,value)| p key end
continue
      end
        end.flatten
          question.answers.map(&:response)
        value.map do |question|
      when 'text'
        end
          end
            r
            r[e.first] = e.last
          end.inject({}) do |r, e|
            v > 1
          end.select do |k,v|
            h
            h[e] += 1
          question.answers.map(&:response).inject({}) do |h,e|
        value.map do |question|
      when 'integer','boolean'
      hash[:key] = case key
questions.group_by(&:question_type).inject!({}) do |hash, (key,value)|
continue
reload!
questions.group_by(&:question_type)['integer']
questions.group_by(&:question_type).to_h[:integer]
questions.group_by(&:question_type).to_hash[:integer]
questions.group_by(&:question_type)[:integer]
questions.group_by(&:question_type)
